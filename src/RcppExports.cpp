// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// cppPOMPP
List cppPOMPP(Eigen::VectorXd beta, Eigen::VectorXd delta, double lambda, Rcpp::String b_updater, Rcpp::String d_updater, Rcpp::String l_updater, Rcpp::List parB, Rcpp::List parD, double lambdaA, double lambdaB, Rcpp::String covsClass, SEXP covariates, double areaD, Rcpp::String xClass, double mu, double nugget, double marksMuMu, double marksMuS2, double marksNuggetA, double marksNuggetB, Eigen::MatrixXd xValues, Eigen::VectorXd xMarks, Eigen::MatrixXd xPositions, Eigen::VectorXi intensityCovs, Eigen::VectorXi observabilityCovs, Eigen::VectorXi xIntensityCovs, Eigen::VectorXi xObservabilityCovs, double maxDist, double sigma2, double phi, int neighborhoodSize, int longCol, int latCol, int burnin, int thin, int iter, int threads, bool verbose);
RcppExport SEXP _pompp_cppPOMPP(SEXP betaSEXP, SEXP deltaSEXP, SEXP lambdaSEXP, SEXP b_updaterSEXP, SEXP d_updaterSEXP, SEXP l_updaterSEXP, SEXP parBSEXP, SEXP parDSEXP, SEXP lambdaASEXP, SEXP lambdaBSEXP, SEXP covsClassSEXP, SEXP covariatesSEXP, SEXP areaDSEXP, SEXP xClassSEXP, SEXP muSEXP, SEXP nuggetSEXP, SEXP marksMuMuSEXP, SEXP marksMuS2SEXP, SEXP marksNuggetASEXP, SEXP marksNuggetBSEXP, SEXP xValuesSEXP, SEXP xMarksSEXP, SEXP xPositionsSEXP, SEXP intensityCovsSEXP, SEXP observabilityCovsSEXP, SEXP xIntensityCovsSEXP, SEXP xObservabilityCovsSEXP, SEXP maxDistSEXP, SEXP sigma2SEXP, SEXP phiSEXP, SEXP neighborhoodSizeSEXP, SEXP longColSEXP, SEXP latColSEXP, SEXP burninSEXP, SEXP thinSEXP, SEXP iterSEXP, SEXP threadsSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type b_updater(b_updaterSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type d_updater(d_updaterSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type l_updater(l_updaterSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type parB(parBSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type parD(parDSEXP);
    Rcpp::traits::input_parameter< double >::type lambdaA(lambdaASEXP);
    Rcpp::traits::input_parameter< double >::type lambdaB(lambdaBSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type covsClass(covsClassSEXP);
    Rcpp::traits::input_parameter< SEXP >::type covariates(covariatesSEXP);
    Rcpp::traits::input_parameter< double >::type areaD(areaDSEXP);
    Rcpp::traits::input_parameter< Rcpp::String >::type xClass(xClassSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type nugget(nuggetSEXP);
    Rcpp::traits::input_parameter< double >::type marksMuMu(marksMuMuSEXP);
    Rcpp::traits::input_parameter< double >::type marksMuS2(marksMuS2SEXP);
    Rcpp::traits::input_parameter< double >::type marksNuggetA(marksNuggetASEXP);
    Rcpp::traits::input_parameter< double >::type marksNuggetB(marksNuggetBSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type xValues(xValuesSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXd >::type xMarks(xMarksSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type xPositions(xPositionsSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi >::type intensityCovs(intensityCovsSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi >::type observabilityCovs(observabilityCovsSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi >::type xIntensityCovs(xIntensityCovsSEXP);
    Rcpp::traits::input_parameter< Eigen::VectorXi >::type xObservabilityCovs(xObservabilityCovsSEXP);
    Rcpp::traits::input_parameter< double >::type maxDist(maxDistSEXP);
    Rcpp::traits::input_parameter< double >::type sigma2(sigma2SEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< int >::type neighborhoodSize(neighborhoodSizeSEXP);
    Rcpp::traits::input_parameter< int >::type longCol(longColSEXP);
    Rcpp::traits::input_parameter< int >::type latCol(latColSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type thin(thinSEXP);
    Rcpp::traits::input_parameter< int >::type iter(iterSEXP);
    Rcpp::traits::input_parameter< int >::type threads(threadsSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(cppPOMPP(beta, delta, lambda, b_updater, d_updater, l_updater, parB, parD, lambdaA, lambdaB, covsClass, covariates, areaD, xClass, mu, nugget, marksMuMu, marksMuS2, marksNuggetA, marksNuggetB, xValues, xMarks, xPositions, intensityCovs, observabilityCovs, xIntensityCovs, xObservabilityCovs, maxDist, sigma2, phi, neighborhoodSize, longCol, latCol, burnin, thin, iter, threads, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_pompp_cppPOMPP", (DL_FUNC) &_pompp_cppPOMPP, 38},
    {NULL, NULL, 0}
};

RcppExport void R_init_pompp(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
